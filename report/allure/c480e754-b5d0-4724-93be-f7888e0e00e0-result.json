{"name": "test_Queryorder[data1]", "status": "broken", "statusDetails": {"message": "ValueError: Invalid format specifier", "trace": "self = <order.test_queryorderApi.TestQueryOrder object at 0x0000000009D8BD88>\ndata = {' testers': '', 'ID': '查询订单详情_002', 'UseCase': '查询订单详情', 'body': '{\"serviceId\":\"JSCSP_ORDER_DETAILINFO\",\"attributes\":{\"parkCode\":\"20181213001\",\"orderNo\":\"DKEBAD98D12B8B43DCBB873ADAEA4D8B\"}}', ...}\n\n    @allure.story(\"订单查询场景\")\n    # @pytest.mark.flaky(reruns=3,reruns_delay=3)\n    @pytest.mark.parametrize('data',testData)\n    def test_Queryorder(self, data):\n        # 获取ID字段数值，截取结尾数字并去掉开头0\n        rowNum = int(data['ID'].split(\"_\")[1])\n        print(\"******* 正在执行用例 ->{0} *********\".format(data['ID']))\n        print(\"请求方式: {0}，请求URL: {1}\".format(data['method'], data['url']))\n        print(\"请求参数: {0}\".format(data['params']))\n        print(\"post请求body类型为：{0} ,body内容为：{1}\".format(data['type'], data['body']))\n        # 发送请求\n        re = r().sendRequests(self.s, data)\n        # 获取服务端返回的值\n        self.result = re.json()\n        print(\"页面返回信息：%s\" % re.content.decode(\"utf-8\"))\n        # 获取excel表格数据的状态码和消息\n        readData_code = int(data[\"status_code\"])\n        readData_msg = data[\"msg\"]\n        if readData_code == self.result['resultCode'] and readData_msg == self.result['message']:\n            OK_data = \"PASS\"\n            print(\"测试结果: {0}---->{1}\".format(data['ID'], OK_data))\n            WriteExcel(setting.TARGET_FILE['orderresult']).write_data(rowNum + 1, OK_data)\n        else:\n            NOT_data = \"FAIL\"\n>           print(\"测试结果: {0}---->{1}\", format(data['ID'], NOT_data))\nE           ValueError: Invalid format specifier\n\ntestrun\\order\\test_queryorderApi.py:54: ValueError"}, "attachments": [{"name": "stdout", "source": "522adf63-5b5a-4428-8617-2023f655c86d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'module': '订单查询', 'ID': '查询订单详情_002', 'UseCase': '查询订单详情', 'url': 'http://10.10.203.19:8081/order-api-dispatcher/order/dispatcher', 'method': 'post', 'params': '', 'headers': '{\"Content-Type\": \"application/json\"}', 'body': '{\"serviceId\":\"JSCSP_ORDER_DETAILINFO\",\"attributes\":{\"parkCode\":\"20181213001\",\"orderNo\":\"DKEBAD98D12B8B43DCBB873ADAEA4D8B\"}}', 'type': 'json', 'status_code': '0', 'msg': '成功', 'result': '', ' testers': ''}"}], "start": 1598261259945, "stop": 1598261320043, "uuid": "3095bcdc-9dee-41a4-8de8-c2a732f1b3a7", "historyId": "6f3ed2826f9fb4a85a9efe6a21f7c604", "testCaseId": "dd3db38a33ec143071f95ab9e1c59566", "fullName": "testrun.order.test_queryorderApi.TestQueryOrder#test_Queryorder", "labels": [{"name": "story", "value": "订单查询场景"}, {"name": "feature", "value": "订单查询"}, {"name": "parentSuite", "value": "testrun.order"}, {"name": "suite", "value": "test_queryorderApi"}, {"name": "subSuite", "value": "TestQueryOrder"}, {"name": "host", "value": "Administrator"}, {"name": "thread", "value": "26640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testrun.order.test_queryorderApi"}]}